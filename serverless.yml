service: indra-api

provider:
  name: aws
  runtime: nodejs18.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action: 'dynamodb:*'
          Resource: arn:aws:dynamodb:us-east-1:565700762908:table/indraTable
        - Effect: Allow
          Action:
            - 'apigateway:GET'
          Resource: 'arn:aws:apigateway:us-east-1::/restapis/09lipp79da/stages/dev/exports/swagger'

plugins:
  - serverless-auto-swagger
  - serverless-offline

custom:
  autoswagger:
    basePath: '/dev'
    title: 'Indra technical test'
    apiType: 'http'
package:
  individually: true
  patterns:
    - '!*/**'
    - '!*.zip'
    - '!node_modules/**'

functions:
  search:
    handler: functions/person/search/handler.search
    package:
      patterns:
        - 'functions/person/search/handler.js'
        - 'utils/*.js'
        - '!*.zip'
        - '!node_modules/**'
    # layers:
    #   - arn:aws:lambda:us-east-1:565700762908:layer:indra-dep-layer:3
    layers:
      - !Ref BaseLambdaLayer
    events:
      - http:
          path: search
          method: GET
          request:
            parameters:
              querystringParameters:
                search: true
          cors: true
  save:
    handler: functions/person/save/handler.save
    package:
      patterns:
        - 'functions/person/save/handler.js'
        - '!*.zip'
        - '!node_modules/**'
        - 'utils/*.js'
    layers:
      - !Ref BaseLambdaLayer
    events:
      - http:
          path: person
          method: POST
          request:
            schemas:
              application/json: ${file(schemas/personSchema.json)}
          cors: true
  getPerson:
    handler: functions/person/get/handler.get
    package:
      patterns:
        - 'functions/person/get/handler.js'
        - '!*.zip'
        - '!node_modules/**'
        - 'utils/*.js'
    layers:
      - !Ref BaseLambdaLayer
    events:
      - http:
          path: person/{id}
          method: GET
          request:
            parameters:
              paths:
                id: true
          cors: true
          reponse:
            200:
              description: 'success'

  # swagger:
  #   handler: swagger/index.handler
  #   package:
  #     patterns:
  #       - 'swagger/index.js'
  #       - '!*.zip'
  #       - '!node_modules/**'
  #       - 'utils/*.js'
  #   layers:
  #     - !Ref BaseLambdaLayer
  #   events:
  #     - http:
  #         path: api-docs
  #         method: GET
  #         cors: true
layers:
  base:
    name: prd-dependencies
    description: layer for nodejs prd dependencies
    licenseInfo: MIT
    compatibleRuntimes:
      - nodejs18.x
    compatibleArchitectures:
      - x86_64
    package:
      artifact: nodejs-layer.zip

resources:
  Resources:
    indraTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: indraTable
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
